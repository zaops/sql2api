basePath: /api/v1
definitions:
  model.APIError:
    properties:
      code:
        type: integer
      details:
        type: string
      message:
        type: string
    type: object
  model.ChangePasswordRequest:
    properties:
      new_password:
        example: newpassword123
        type: string
      old_password:
        example: oldpassword123
        type: string
    required:
    - new_password
    - old_password
    type: object
  model.ErrorResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/model.APIError'
      message:
        type: string
      success:
        type: boolean
      timestamp:
        type: string
    type: object
  model.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.ResourceRequest:
    properties:
      action:
        example: create
        type: string
      data:
        additionalProperties: true
        type: object
      resource:
        example: item
        type: string
    required:
    - action
    - resource
    type: object
  model.SuccessResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/model.APIError'
      message:
        type: string
      success:
        type: boolean
      timestamp:
        type: string
    type: object
  model.UserCreateRequest:
    properties:
      email:
        type: string
      full_name:
        maxLength: 255
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8081
info:
  contact:
    email: support@sql2api.com
    name: SQL2API Team
    url: http://www.sql2api.com
  description: SQL2API 是一个现代化的 RESTful API 服务，支持统一的 CRUD 操作、JWT 认证、IP 白名单等功能
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: SQL2API Server
  version: 1.0.0
paths:
  /api/v1/auth/change-password:
    post:
      consumes:
      - application/json
      description: 修改当前用户的密码
      parameters:
      - description: 修改密码请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: 未认证或旧密码错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 修改密码
      tags:
      - 认证
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: 用户使用用户名和密码登录，返回 JWT 令牌
      parameters:
      - description: 登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: 认证失败
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 用户登录
      tags:
      - 认证
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: 用户登出（客户端删除令牌）
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
      security:
      - BearerAuth: []
      summary: 用户登出
      tags:
      - 认证
  /api/v1/auth/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取当前用户信息
      tags:
      - 认证
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: 使用当前令牌获取新的令牌
      produces:
      - application/json
      responses:
        "200":
          description: 刷新成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "401":
          description: 令牌无效
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 刷新 JWT 令牌
      tags:
      - 认证
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: 注册新用户账户
      parameters:
      - description: 注册请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 注册成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "409":
          description: 用户已存在
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: 用户注册
      tags:
      - 认证
  /api/v1/resource:
    post:
      consumes:
      - application/json
      description: 通过 action 字段分发不同的资源操作
      parameters:
      - description: 资源操作请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 统一资源操作
      tags:
      - 资源
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: 'JWT Authorization header using the Bearer scheme. Example: ''Bearer
      {token}'''
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
