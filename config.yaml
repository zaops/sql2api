# SQL2API 配置文件
# 支持环境变量覆盖，格式：SQL2API_<SECTION>_<KEY>
# 例如：SQL2API_SERVER_PORT=9090

# 服务器配置
server:
  host: "0.0.0.0"           # 监听地址
  port: 8080                # 监听端口
  mode: "debug"             # 运行模式: debug, release, test
  read_timeout: 30          # 读取超时时间（秒）
  write_timeout: 30         # 写入超时时间（秒）
  idle_timeout: 120         # 空闲超时时间（秒）

# 数据库配置
database:
  type: "postgres"          # 数据库类型: postgres, oracle
  host: "localhost"         # 数据库主机
  port: 5432               # 数据库端口
  username: "postgres"      # 用户名
  password: "password"      # 密码
  database: "sql2api"       # 数据库名
  service: ""              # Oracle 服务名（仅 Oracle 需要）
  ssl_mode: "disable"      # PostgreSQL SSL 模式: disable, require, verify-ca, verify-full
  max_open_conns: 25       # 最大打开连接数
  max_idle_conns: 10       # 最大空闲连接数
  max_lifetime: 60         # 连接最大生存时间（分钟）

# 安全配置
security:
  # IP 白名单，支持 CIDR 格式
  ip_whitelist:
    - "127.0.0.1"          # 本地回环
    - "::1"                # IPv6 本地回环
    - "192.168.0.0/16"     # 私有网络
    - "10.0.0.0/8"         # 私有网络
    - "172.16.0.0/12"      # 私有网络
  
  # CORS 配置
  enable_cors: true
  cors_origins:
    - "*"                  # 允许所有来源（生产环境建议限制）

# 日志配置
log:
  level: "info"            # 日志级别: debug, info, warn, error
  format: "json"           # 日志格式: json, text
  output: "stdout"         # 输出方式: stdout, file
  file: "sql2api.log"      # 日志文件路径（当 output 为 file 时）

# Swagger 文档配置
swagger:
  title: "SQL2API Server"                    # API 标题
  version: "1.0.0"                          # API 版本
  description: "SQL2API 是一个现代化的 RESTful API 服务，支持统一的 CRUD 操作、JWT 认证、IP 白名单等功能"
  host: "localhost:8081"                    # API 主机地址
  base_path: "/api/v1"                      # API 基础路径
  schemes:                                  # 支持的协议
    - "http"
    - "https"

# API Key 认证配置
api_keys:
  enabled: true                             # 是否启用 API Key 认证
  header_name: "X-API-Key"                  # API Key 请求头名称
  query_param: "api_key"                    # API Key 查询参数名称
  allow_anonymous: true                     # 是否允许匿名访问（通过 IP 白名单控制）
  keys:                                     # API Key 列表
    - key: "dev-key-12345"                  # 开发环境 API Key
      name: "Development Key"
      description: "用于开发环境的 API Key"
      permissions:
        - "sql.*"                           # 允许所有 SQL 操作
      active: true
    - key: "readonly-key-67890"             # 只读 API Key
      name: "Read-only Key"
      description: "只允许查询操作的 API Key"
      permissions:
        - "sql.query"                       # 只允许查询
      active: true
    - key: "admin-key-abcdef"               # 管理员 API Key
      name: "Admin Key"
      description: "管理员权限的 API Key"
      permissions:
        - "*"                               # 允许所有操作
      active: true

# SQL 功能配置
sql:
  enabled: true                             # 是否启用 SQL 功能
  allowed_tables:                           # 允许访问的表列表
    - "items"                               # 项目表
    - "logs"                                # 日志表（示例）
  allowed_actions:                          # 允许的操作类型
    - "select"                              # 查询操作
    - "insert"                              # 插入操作
    - "update"                              # 更新操作
    - "delete"                              # 删除操作
  max_query_time: 30                        # 最大查询时间（秒）
  max_result_size: 1000                     # 最大结果集大小（行数）
  enable_raw_sql: true                      # 是否允许原生 SQL
  enable_batch: true                        # 是否启用批量操作
  enable_transactions: true                 # 是否启用事务支持

# 示例：Oracle 数据库配置
# database:
#   type: "oracle"
#   host: "localhost"
#   port: 1521
#   username: "system"
#   password: "oracle"
#   service: "XE"          # Oracle 服务名
#   max_open_conns: 25
#   max_idle_conns: 10
#   max_lifetime: 60

# 示例：生产环境配置
# server:
#   host: "0.0.0.0"
#   port: 80
#   mode: "release"
#   read_timeout: 60
#   write_timeout: 60
#
# jwt:
#   secret: "production-secret-key-must-be-very-long-and-secure"
#   expiration: 8
#
# security:
#   ip_whitelist:
#     - "10.0.0.0/8"       # 仅允许内网访问
#   enable_cors: false
#
# log:
#   level: "warn"
#   format: "json"
#   output: "file"
#   file: "/var/log/sql2api/app.log"
